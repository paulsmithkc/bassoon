{"version":3,"sources":["webpack://bassoon/./src/bassoon.mjs","webpack://bassoon/./src/Emitter.mjs","webpack://bassoon/./src/Parser.mjs","webpack://bassoon/webpack/bootstrap","webpack://bassoon/webpack/startup","webpack://bassoon/webpack/runtime/define property getters","webpack://bassoon/webpack/runtime/hasOwnProperty shorthand"],"names":["bassoon","arg1","run","url","args","emitter","events","on","key","callback","event","get","queue","length","i","emit","data","push","Emitter","worker","Worker","URL","location","toString","workerPath","workerObj","onmessage","evt","cmd","postMessage","method","withCredentials","chunkSize","parser","keyPattern","stringPattern","numberPattern","truePattern","falsePattern","nullPattern","undefinedPattern","stack","state","value","match","buffer","parse","end","depth","parseValue","type","pattern","lastIndex","exec","groups","parseFloat","undefined","pop","chunk","c","value1","value2","Error","substring","Parser","curObj","curKey","emitData","seen","xhr","XMLHttpRequest","open","responseType","onreadystatechange","readyState","fullText","responseText","newText","substr","error","onload","onerror","abort","status","statusText","timeout","send","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","d","definition","o","Object","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call"],"mappings":"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","file":"bassoon.min.js","sourcesContent":["import Emitter from './Emitter.mjs';\r\nimport Parser from './Parser.mjs';\r\n\r\nexport default function bassoon(arg1) {\r\n  'use strict';\r\n\r\n  if (typeof arg1 === 'string') {\r\n    return run({ url: arg1 });\r\n  } else {\r\n    return run(arg1);\r\n  }\r\n\r\n  function run(args) {\r\n    // web worker integration\r\n    const emitter = Emitter();\r\n    if (args.worker && Worker) {\r\n      // fix the URL so that it is relative to the current page\r\n      args.url = new URL(args.url, location).toString();\r\n      // start the worker\r\n      const workerPath = args.workerPath || '/bassoon/bassoon-worker.min.js';\r\n      const workerObj = new Worker(workerPath);\r\n      workerObj.onmessage = function (evt) {\r\n        emitter.emit(evt.data.cmd, evt.data.data);\r\n      };\r\n      workerObj.postMessage({ cmd: 'start', args });\r\n      return emitter;\r\n    }\r\n\r\n    // arguments\r\n    const url = args.url;\r\n    const method = args.method || 'GET';\r\n    const withCredentials = args.withCredentials || false;\r\n    const chunkSize = args.chunkSize;\r\n\r\n    // request state\r\n    const parser = Parser(parse);\r\n    let seen = 0;\r\n    let chunk = [];\r\n    let stack = [];\r\n    let curObj = null;\r\n    let curKey = null;\r\n\r\n    // methods\r\n\r\n    function emitData(data) {\r\n      if (chunkSize) {\r\n        chunk.push(data);\r\n        if (chunk.length >= chunkSize) {\r\n          emitter.emit('data', chunk);\r\n          chunk = [];\r\n        }\r\n      } else {\r\n        emitter.emit('data', data);\r\n      }\r\n    }\r\n\r\n    function parse({ key, data, depth }) {\r\n      //console.log(' '.repeat(depth * 2), key, data);\r\n      if (curObj) {\r\n        // processing object/array\r\n        switch (key) {\r\n          case 'openarray':\r\n            stack.push({ curObj, curKey });\r\n            curObj = [];\r\n            curKey = null;\r\n            break;\r\n          case 'openobject':\r\n            stack.push({ curObj, curKey });\r\n            curObj = {};\r\n            curKey = null;\r\n            break;\r\n          case 'closearray':\r\n          case 'closeobject':\r\n            if (stack.length) {\r\n              let data = curObj;\r\n              ({ curObj, curKey } = stack.pop());\r\n              if (curKey !== null) {\r\n                curObj[curKey] = data;\r\n                curKey = null;\r\n              } else {\r\n                curObj.push(data);\r\n              }\r\n            } else {\r\n              emitData(curObj);\r\n              curObj = curKey = null;\r\n            }\r\n            break;\r\n          case 'key':\r\n            curKey = data;\r\n            break;\r\n          case 'value':\r\n            if (curKey !== null) {\r\n              curObj[curKey] = data;\r\n              curKey = null;\r\n            } else {\r\n              curObj.push(data);\r\n            }\r\n            break;\r\n        }\r\n      } else {\r\n        // processing root\r\n        switch (key) {\r\n          case 'openarray':\r\n          case 'closearray':\r\n            // ignore root array\r\n            break;\r\n          case 'openobject':\r\n            curObj = {};\r\n            break;\r\n          case 'value':\r\n            emitData(data);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // main logic\r\n\r\n    try {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open(method || 'GET', url);\r\n      xhr.responseType = 'text';\r\n      xhr.withCredentials = withCredentials;\r\n\r\n      xhr.onreadystatechange = function (evt) {\r\n        try {\r\n          if (xhr.readyState > 2) {\r\n            const fullText = xhr.responseText;\r\n            const newText = fullText.substr(seen);\r\n            seen = fullText.length;\r\n            parser.parse(newText);\r\n          }\r\n        } catch (error) {\r\n          xhr.onreadystatechange = null;\r\n          xhr.onload = null;\r\n          xhr.onerror = null;\r\n          xhr.abort();\r\n          emitter.emit('error', error);\r\n        }\r\n      };\r\n      xhr.onload = function (event) {\r\n        try {\r\n          // let the parser terminate any partial values\r\n          parser.end();\r\n          // emit the last object, even if it is incomplete\r\n          if (stack.length) {\r\n            emitData(stack[0]);\r\n          } else if (curObj) {\r\n            emitData(curObj);\r\n          }\r\n          // emit the last chunk\r\n          if (chunk.length) {\r\n            emitter.emit('data', chunk);\r\n          }\r\n          emitter.emit('end', {\r\n            status: xhr.status,\r\n            statusText: xhr.statusText,\r\n          });\r\n        } catch (error) {\r\n          emitter.emit('error', error);\r\n        }\r\n      };\r\n      xhr.onerror = function (event) {\r\n        const error = new Error('Network Error');\r\n        error.status = xhr.status;\r\n        error.statusText = xhr.statusText;\r\n        error.timeout = xhr.timeout;\r\n        emitter.emit('error', error);\r\n      };\r\n\r\n      xhr.send();\r\n    } catch (error) {\r\n      emitter.emit('error', error);\r\n    }\r\n\r\n    return emitter;\r\n  }\r\n}\r\n","export default function Emitter() {\r\n  const events = {};\r\n  const emitter = { on, emit };\r\n  return emitter;\r\n\r\n  function get(key) {\r\n    if (!events[key]) {\r\n      events[key] = { callback: null, queue: [] };\r\n    }\r\n    return events[key];\r\n  }\r\n  function on(key, callback) {\r\n    const event = get(key);\r\n    const queue = event.queue;\r\n    event.callback = callback;\r\n    if (callback && queue.length) {\r\n      // emit missed events\r\n      for (let i = 0; i < queue.length; ++i) {\r\n        callback(queue[i]);\r\n      }\r\n      event.queue = [];\r\n    }\r\n    return emitter;\r\n  }\r\n  function emit(key, data) {\r\n    const event = get(key);\r\n    const callback = event.callback;\r\n    if (callback) {\r\n      // emit current event\r\n      callback(data);\r\n    } else {\r\n      // save events so that they don't get dropped\r\n      event.queue.push(data);\r\n    }\r\n    return emitter;\r\n  }\r\n}","export default function Parser(callback) {\r\n  // states\r\n  const BEGIN = 0;\r\n  const ARRAY = 1;\r\n  const OBJECT = 2;\r\n  const KEY = 3;\r\n  const VALUE = 4;\r\n  const STRING = 5;\r\n  const NUMBER = 6;\r\n  const TRUE = 7;\r\n  const FALSE = 8;\r\n  const NULL = 9;\r\n  const UNDEFINED = 10;\r\n  const END = 11;\r\n\r\n  // patterns\r\n  // const whitespacePattern = /^[ \\t\\n\\r]+/;\r\n  const keyPattern = /((\"(?<value1>[^\\\"]+)\")|(?<value2>\\w+))[ \\t\\n\\r]*:[ \\t\\n\\r]*/y;\r\n  const stringPattern = /\"(?<value>(([^\\\"]+)|(\\[\"\\/bfnrtv])|(\\u[0-9a-fA-F]{4}))+)\"[ \\t\\n\\r,}\\]]/y;\r\n  const numberPattern = /(?<value>[-+]?\\d+(.\\d+)?([eE][-+]?\\d+)?)[ \\t\\n\\r,}\\]]/y;\r\n  const truePattern = /(?<value>true)[ \\t\\n\\r,}\\]]/iy;\r\n  const falsePattern = /(?<value>false)[ \\t\\n\\r,}\\]]/iy;\r\n  const nullPattern = /(?<value>null)[ \\t\\n\\r,}\\]]/iy;\r\n  const undefinedPattern = /[^ \\t\\n\\r,}\\]]+[ \\t\\n\\r,}\\]]/y;\r\n\r\n  // parser state\r\n  const stack = [];\r\n  let state = BEGIN;\r\n  let key = null;\r\n  let value = null;\r\n  let match = null;\r\n  let buffer = '';\r\n  let i = 0;\r\n\r\n  // build and return parser object\r\n  const parser = { parse, end, callback };\r\n  return parser;\r\n\r\n  function emit(key, data) {\r\n    // console.log(' '.repeat(stack.length * 2), key, data);\r\n    callback = parser.callback;\r\n    if (callback) {\r\n      callback({ key, data, depth: stack.length });\r\n    }\r\n  }\r\n\r\n  function parseKey() {\r\n    let pattern = keyPattern;\r\n    pattern.lastIndex = i;\r\n    match = pattern.exec(buffer);\r\n    if (match) {\r\n      i = pattern.lastIndex - 1;\r\n      key = match.groups.value1 || match.groups.value2;\r\n      emit('key', key);\r\n      state = VALUE;\r\n      return true;\r\n    } else {\r\n      // console.log('key incomplete', buffer.substr(i, 20), '...');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function parseValue(type) {\r\n    let pattern = null;\r\n    switch (type) {\r\n      case STRING:\r\n        pattern = stringPattern;\r\n        break;\r\n      case NUMBER:\r\n        pattern = numberPattern;\r\n        break;\r\n      case TRUE:\r\n        pattern = truePattern;\r\n        break;\r\n      case FALSE:\r\n        pattern = falsePattern;\r\n        break;\r\n      case NULL:\r\n        pattern = nullPattern;\r\n        break;\r\n      case UNDEFINED:\r\n        pattern = undefinedPattern;\r\n        break;\r\n    }\r\n\r\n    pattern.lastIndex = i;\r\n    match = pattern.exec(buffer);\r\n    if (match) {\r\n      // exclude the terminating ,}]\r\n      i = pattern.lastIndex - 2;\r\n\r\n      switch (type) {\r\n        case STRING:\r\n          value = match.groups.value;\r\n          break;\r\n        case NUMBER:\r\n          value = parseFloat(match.groups.value);\r\n          break;\r\n        case TRUE:\r\n          value = true;\r\n          break;\r\n        case FALSE:\r\n          value = false;\r\n          break;\r\n        case NULL:\r\n          value = null;\r\n          break;\r\n        case UNDEFINED:\r\n          value = undefined;\r\n          break;\r\n      }\r\n\r\n      emit('value', value);\r\n      if (state !== BEGIN) {\r\n        state = stack.pop();\r\n      }\r\n      return true;\r\n    } else {\r\n      // console.log('value incomplete', buffer.substr(i, 20), '...');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function parse(chunk) {\r\n    buffer += chunk;\r\n\r\n    for (; i < buffer.length; ++i) {\r\n      const c = buffer[i];\r\n      switch (state) {\r\n        case END:\r\n          // skip all remaining text\r\n          i = buffer.length;\r\n          break;\r\n        case BEGIN:\r\n        case VALUE:\r\n          switch (c) {\r\n            case ' ':\r\n            case '\\t':\r\n            case '\\n':\r\n            case '\\r':\r\n              // ignore whitespace\r\n              break;\r\n            case '[':\r\n              emit('openarray');\r\n              state = ARRAY;\r\n              break;\r\n            case '{':\r\n              emit('openobject');\r\n              state = OBJECT;\r\n              break;\r\n            case '\"':\r\n              if (!parseValue(STRING)) {\r\n                // continue parsing when we get more data\r\n                return;\r\n              }\r\n              break;\r\n            case '-':\r\n            case '+':\r\n            case '.':\r\n            case '0':\r\n            case '1':\r\n            case '2':\r\n            case '3':\r\n            case '4':\r\n            case '5':\r\n            case '6':\r\n            case '7':\r\n            case '8':\r\n            case '9':\r\n              if (!parseValue(NUMBER)) {\r\n                // continue parsing when we get more data\r\n                return;\r\n              }\r\n              break;\r\n            case 't':\r\n            case 'T':\r\n              if (!parseValue(TRUE)) {\r\n                // continue parsing when we get more data\r\n                return;\r\n              }\r\n              break;\r\n            case 'f':\r\n            case 'F':\r\n              if (!parseValue(FALSE)) {\r\n                // continue parsing when we get more data\r\n                return;\r\n              }\r\n              break;\r\n            case 'n':\r\n            case 'N':\r\n              if (!parseValue(NULL)) {\r\n                // continue parsing when we get more data\r\n                return;\r\n              }\r\n              break;\r\n            default:\r\n              if (!parseValue(UNDEFINED)) {\r\n                // continue parsing when we get more data\r\n                return;\r\n              }\r\n              break;\r\n          }\r\n          break;\r\n        case ARRAY:\r\n          switch (c) {\r\n            case ' ':\r\n            case '\\t':\r\n            case '\\n':\r\n            case '\\r':\r\n              // ignore whitespace\r\n              break;\r\n            case ']':\r\n              emit('closearray');\r\n              state = stack.length ? stack.pop() : BEGIN;\r\n              break;\r\n            case ',':\r\n              // ignore extra commas\r\n              break;\r\n            default:\r\n              stack.push(state);\r\n              state = VALUE;\r\n              --i;\r\n              break;\r\n          }\r\n          break;\r\n        case OBJECT:\r\n          switch (c) {\r\n            case ' ':\r\n            case '\\t':\r\n            case '\\n':\r\n            case '\\r':\r\n              // ignore whitespace\r\n              break;\r\n            case '}':\r\n              emit('closeobject');\r\n              state = stack.length ? stack.pop() : BEGIN;\r\n              break;\r\n            case '{':\r\n            case '[':\r\n            case ']':\r\n            case ',':\r\n              // ignore stray characters\r\n              break;\r\n            default:\r\n              stack.push(state);\r\n              state = KEY;\r\n              --i;\r\n              break;\r\n          }\r\n          break;\r\n        case KEY:\r\n          if (!parseKey()) {\r\n            // continue parsing when we get more data\r\n            return;\r\n          }\r\n          break;\r\n        default:\r\n          throw new Error('unexpected state ' + state);\r\n      }\r\n    }\r\n\r\n    buffer = buffer.substring(i);\r\n    i = 0;\r\n  }\r\n\r\n  function end() {\r\n    return parse(',');\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(684);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)"],"sourceRoot":""}